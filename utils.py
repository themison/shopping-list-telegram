import re
from typing import List, Tuple


def parse_items(text: str) -> List[Tuple[str, int]]:
    items_raw = re.split(r"[,;|\n\r\t]+", text.strip())

    items = []
    for item in items_raw:
        item = item.strip()
        if not item:
            continue

        quantity_match = re.search(
            r"(?:\s+x?(\d+))|(?:\s+(\d+)\s*$)", item, re.IGNORECASE
        )
        quantity = 1

        if quantity_match:
            quantity_str = quantity_match.group(1) or quantity_match.group(2)
            if quantity_str:
                try:
                    quantity = int(quantity_str)
                except ValueError:
                    pass
            item = re.sub(r"\s+x?\d+\s*$", "", item, flags=re.IGNORECASE).strip()

        if item:
            items.append((item, quantity))

    return items


def format_items_list(items):
    if not items:
        return "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"

    formatted = ["*–≠–ª–µ–º–µ–Ω—Ç—ã:*"]
    for item in items:
        formatted.append(
            f"‚Ä¢ {item['name']}"
            + (f" x{item['quantity']}" if item["quantity"] > 1 else "")
        )

    return "\n".join(formatted) if formatted else "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"


def format_lists_menu(lists):
    if not lists:
        return "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–ø–∏—Å–∫–æ–≤. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å –ø–æ–º–æ—â—å—é /lists"

    formatted = ["*–í–∞—à–∏ —Å–ø–∏—Å–∫–∏:*"]
    for lst in lists:
        role_icon = "üëë" if lst["user_role"] == "owner" else "üë•"
        formatted.append(f"{role_icon} {lst['name']}")

    formatted.append("\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π")
    return "\n".join(formatted)
